/*************************************************************************
	> File Name: 1022_石子归并v2.cpp
	> Author: dulun
	> Mail: dulun@xiyoulinux.org
	> Created Time: 2016年03月07日 星期一 13时33分38秒
 ************************************************************************/

#include<iostream>
#include<stdio.h>
#include<cstring>
#include<cstdlib>
#include<algorithm>
#define LL long long
using namespace std;
 
const int N = 2086;
int a[N];
int dp[N][N];
int sum[N];
 
int main()
{
    int n; 
    cin>>n;

    for(int i = 0; i < n; i++)
    {
        scanf("%d", &a[i]);
        if(i)sum[i] = sum[i-1]+a[i];
        else sum[i] = a[i];
    }
    for(int i = n; i < 2*n; i++)
    {
        a[i] = a[i-n];
        sum[i] = sum[i-1]+a[i];
    }

    for(int len = 2; len <= n; len++)
    {
        for(int start = 0; start < 2*n - len + 1; start++)
        {
            int mi = 1<<30;
            int end = start+len-1;
            for(int k = start; k < end; k++ )
            {
                mi = min(mi, dp[start][k]+dp[k+1][end] + sum[end] - sum[start-1]);
            }
            dp[start][end] = mi;
           // printf("dp[%d][%d] = %d\n", start, end, mi);
        }
    }
    int ans = 1<<30;
    for(int i = 0; i < n; i++)
    {
        ans = min(ans, dp[i][i+n-1]);
    }
    cout<<ans<<endl;

}


